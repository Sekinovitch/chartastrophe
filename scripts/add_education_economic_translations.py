import json
import sys
from datetime import datetime
from pathlib import Path

def main():
    """Ajoute les traductions manquantes pour √©ducation et √©conomie."""
    
    # Chemin vers le fichier de traductions
    translations_file = Path("data/pretranslated_datasets.json")
    
    if not translations_file.exists():
        print("‚ùå Fichier pretranslated_datasets.json non trouv√©")
        return
    
    # Charger le fichier existant
    with open(translations_file, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    print(f"üìä √âtat actuel: {len(data['translations'])} traductions")
    
    # Nouvelles traductions √©ducatives
    education_translations = {
        "Bilingual Education Outcomes": "R√©sultats de l'√âducation Bilingue",
        "University Enrollment Data": "Donn√©es d'Inscription Universitaire",
        "Higher Education Completion": "Ach√®vement de l'Enseignement Sup√©rieur",
        "School Performance Data": "Donn√©es de Performance Scolaire",
        "Education Performance Data": "Donn√©es de Performance √âducative",
        "Education Funding": "Financement de l'√âducation",
        "Education Statistics": "Statistiques d'√âducation",
        "Student Debt Statistics": "Statistiques de la Dette √âtudiante",
        "Digital Literacy Rates": "Taux d'Alphab√©tisation Num√©rique",
        "Education Excellence Indicators": "Indicateurs d'Excellence √âducative"
    }
    
    # Nouvelles traductions √©conomiques - R√©serve F√©d√©rale
    federal_reserve_translations = {
        "Federal Funds Rate": "Taux des Fonds F√©d√©raux",
        "Treasury 10year Yield": "Rendement du Tr√©sor √† 10 ans",
        "Housing Starts": "Mises en Chantier de Logements",
        "Industrial Production": "Production Industrielle",
        "Retail Sales": "Ventes au D√©tail",
        "Consumer Sentiment": "Confiance des Consommateurs",
        "VIX Volatility Index": "Indice de Volatilit√© VIX",
        "Dollar Index DXY": "Indice Dollar DXY",
        "Payroll Employment": "Emploi sur les Salaires",
        "Initial Jobless Claims": "Demandes Initiales d'Allocations Ch√¥mage",
        "Money Supply M2": "Masse Mon√©taire M2"
    }
    
    # Nouvelles traductions donn√©es alternatives √©conomiques
    alternative_economic_translations = {
        "Satellite Economic Activity": "Activit√© √âconomique Satellite",
        "Social Media Sentiment Stocks": "Sentiment M√©dias Sociaux Actions",
        "Google Search Economic Indicators": "Indicateurs √âconomiques Recherches Google",
        "Credit Card Spending Trends": "Tendances de D√©penses Cartes de Cr√©dit",
        "Supply Chain Disruption Index": "Indice de Perturbation Cha√Æne d'Approvisionnement",
        "Labor Market Mobility": "Mobilit√© du March√© du Travail",
        "Housing Market Sentiment": "Sentiment du March√© Immobilier",
        "Consumer Confidence Alternative": "Confiance des Consommateurs Alternative"
    }
    
    # Nouvelles traductions donn√©es gouvernementales avanc√©es
    government_advanced_translations = {
        "Regional Unemployment Statistics": "Statistiques de Ch√¥mage R√©gional",
        "European Election Results": "R√©sultats des √âlections Europ√©ennes",
        "Road Traffic Safety Statistics": "Statistiques de S√©curit√© Routi√®re",
        "Legislative Election Results": "R√©sultats des √âlections L√©gislatives",
        "NHS Healthcare Waiting Times": "Temps d'Attente des Soins de Sant√© NHS",
        "Brexit Trade Impact Analysis": "Analyse de l'Impact Commercial du Brexit",
        "Digital Exclusion Index": "Indice d'Exclusion Num√©rique",
        "Food Security Metrics": "Indicateurs de S√©curit√© Alimentaire",
        "Universal Credit Claims": "Demandes de Cr√©dit Universel",
        "Knife Crime Statistics": "Statistiques de Criminalit√© au Couteau"
    }
    
    # Nouvelles traductions donn√©es scientifiques avanc√©es
    space_advanced_translations = {
        "Astronomy Picture of the Day": "Image Astronomique du Jour",
        "Near Earth Objects Detection Data": "Donn√©es de D√©tection d'Objets G√©ocroiseurs",
        "Mars Weather Monitoring": "Surveillance M√©t√©orologique de Mars",
        "Earth Satellite Imagery": "Imagerie Satellite Terrestre",
        "Kepler Exoplanet Discoveries": "D√©couvertes d'Exoplan√®tes Kepler",
        "Mars Curiosity Rover Photography": "Photographie du Rover Curiosity",
        "Solar Flare Activity Monitoring": "Surveillance de l'Activit√© des √âruptions Solaires",
        "Asteroid Belt Tracking Data": "Donn√©es de Suivi de la Ceinture d'Ast√©ro√Ødes",
        "International Space Station Position": "Position de la Station Spatiale Internationale",
        "Artemis Lunar Mission Data": "Donn√©es de Mission Lunaire Artemis",
        "James Webb Space Telescope Observations": "Observations du T√©lescope Spatial James Webb"
    }
    
    # Combiner toutes les nouvelles traductions
    new_translations = {}
    new_translations.update(education_translations)
    new_translations.update(federal_reserve_translations)
    new_translations.update(alternative_economic_translations)
    new_translations.update(government_advanced_translations)
    new_translations.update(space_advanced_translations)
    
    print(f"üéì Ajout de {len(education_translations)} traductions √©ducatives")
    print(f"üè¶ Ajout de {len(federal_reserve_translations)} traductions R√©serve F√©d√©rale")
    print(f"üìà Ajout de {len(alternative_economic_translations)} traductions √©conomiques alternatives")
    print(f"üèõÔ∏è Ajout de {len(government_advanced_translations)} traductions gouvernementales avanc√©es")
    print(f"üöÄ Ajout de {len(space_advanced_translations)} traductions spatiales avanc√©es")
    
    # Ajouter les nouvelles traductions
    translations_added = 0
    for english, french in new_translations.items():
        if english not in data['translations']:
            data['translations'][english] = french
            translations_added += 1
            print(f"‚úÖ Ajout√©: {english} ‚Üí {french}")
        else:
            print(f"‚ö†Ô∏è  D√©j√† pr√©sent: {english}")
    
    # Mettre √† jour les m√©tadonn√©es
    data['metadata']['total_translations'] = len(data['translations'])
    data['metadata']['education_economic_datasets_added'] = translations_added
    data['metadata']['last_education_economic_update'] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    data['metadata']['version'] = "3.3"
    
    # Sauvegarder le fichier
    with open(translations_file, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    
    print(f"\nüéØ R√©sum√©:")
    print(f"üìä Nouvelles traductions ajout√©es: {translations_added}")
    print(f"üìà Total de traductions: {len(data['translations'])}")
    print(f"üíæ Fichier mis √† jour: {translations_file}")
    print(f"üÜï Version: 3.3")

if __name__ == "__main__":
    main() 